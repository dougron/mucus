/*This code was ORIGINALLY generated using the UMPLE 1.29.0.4181.a593105a9 modeling language!*/
/*however as it is a static variable container, it is no longer generated by Umple and can be edited in place*/

package main.java.com.dougron.mucus.mucus_output_manager.musicxml_maker;

import java.util.Map;

import com.google.common.collect.ImmutableMap;

import DataObjects.combo_variables.IntAndString;
import XMLMaker.XMLKey;


// line 34 "../musicxml_maker.ump"
public class MXML
{

  //------------------------
  // STATIC VARIABLES
  //------------------------
	
	// these variables can be set, as I am predicting things like needing to set what is 
	// displayed or not, rather than passing a mass of arguments to the MuXMLMaker
	
	public static double textAnnotationFontSize = 10;
	
	//------------------------
	// CONSTANTS
	//------------------------

	public static final int DOTTED_WHOLE_NOTE = 0;
	public static final int WHOLE_NOTE = 1;
	public static final int DOTTED_HALF_NOTE = 2;
	public static final int HALF_NOTE = 3;
	public static final int DOTTED_QUARTER_NOTE = 4;
	public static final int QUARTER_NOTE = 5;
	public static final int DOTTED_EIGHTH_NOTE = 6;
	public static final int EIGHTH_NOTE = 7;
	public static final int DOTTED_SIXTEENTH_NOTE = 8;
	public static final int SIXTEENTH_NOTE = 9;
	public static final int MAX_NUMBER_OF_VOICES = 4;
  
	
	// barline bar-style stuff
	public static final int BARLINE_REGULAR = 0;
	public static final int BARLINE_DOTTED = 1;
	public static final int BARLINE_DASHED = 2;
	public static final int BARLINE_HEAVY = 3;
	public static final int BARLINE_LIGHT_LIGHT = 4;
	public static final int BARLINE_LIGHT_HEAVY = 5;
	public static final int BARLINE_HEAVY_LIGHT = 6;
	public static final int BARLINE_HEAVY_HEAVY = 7;
	public static final int BARLINE_TICK = 8;
	public static final int BARLINE_SHORT = 9;
	public static final int BARLINE_NONE = 10;
	
	public static String[] barlineBarStyle = new String[] {"regular", "dotted", "dashed", "heavy", "light-light", "light-heavy", "heavy-light", "heavy-heavy", "tick", "short", "none"};
  
  
  // copied from MXM -----------------------------------------------
  
	public static final MXML_NoteDurationType DOTTED_MAXIMA = new MXML_NoteDurationType("maxima", 1);
	public static final MXML_NoteDurationType MAXIMA = new MXML_NoteDurationType("maxima", 0);
	public static final MXML_NoteDurationType DOTTED_LONG = new MXML_NoteDurationType("long", 1);
	public static final MXML_NoteDurationType LONG = new MXML_NoteDurationType("long", 0);
	public static final MXML_NoteDurationType DOTTED_BREVE = new MXML_NoteDurationType("breve", 1);
	public static final MXML_NoteDurationType BREVE = new MXML_NoteDurationType("breve", 0); 
	public static final MXML_NoteDurationType DOTTED_WHOLE = new MXML_NoteDurationType("whole", 1);
	public static final MXML_NoteDurationType WHOLE = new MXML_NoteDurationType("whole", 0);
	public static final MXML_NoteDurationType DOTTED_HALF = new MXML_NoteDurationType("half", 1);
	public static final MXML_NoteDurationType HALF = new MXML_NoteDurationType("half", 0);
	public static final MXML_NoteDurationType DOTTED_QUARTER = new MXML_NoteDurationType("quarter", 1);
	public static final MXML_NoteDurationType QUARTER = new MXML_NoteDurationType("quarter", 0);
	public static final MXML_NoteDurationType DOTTED_EIGHTH = new MXML_NoteDurationType("eighth", 1);
	public static final MXML_NoteDurationType EIGHTH = new MXML_NoteDurationType("eighth", 0);
	public static final MXML_NoteDurationType DOTTED_SIXTEENTH = new MXML_NoteDurationType("16th", 1);
	public static final MXML_NoteDurationType SIXTEENTH = new MXML_NoteDurationType("16th", 0);
	public static final MXML_NoteDurationType DOTTED_THIRTY_SECOND = new MXML_NoteDurationType("32nd", 1);
	public static final MXML_NoteDurationType THIRTY_SECOND = new MXML_NoteDurationType("32nd", 0);
	public static final MXML_NoteDurationType DOTTED_SIXTY_FOURTH = new MXML_NoteDurationType("64th", 1);
	public static final MXML_NoteDurationType SIXTY_FOURTH = new MXML_NoteDurationType("64th", 0);
	public static final MXML_NoteDurationType DOTTED_ONE_TWENTY_EIGHTH = new MXML_NoteDurationType("128th", 1);
	public static final MXML_NoteDurationType ONE_TWENTY_EIGHTH = new MXML_NoteDurationType("128th", 0);
	public static final MXML_NoteDurationType DOTTED_TWO_HUNDRED_AND_FIFTY_SIXTH = new MXML_NoteDurationType("256th", 1);
	public static final MXML_NoteDurationType TWO_HUNDRED_AND_FIFTY_SIXTH = new MXML_NoteDurationType("256th", 0);
	public static final MXML_NoteDurationType DOTTED_FIVE_HUNDRED_AND_TWELFTH = new MXML_NoteDurationType("512th", 1);
	public static final MXML_NoteDurationType FIVE_HUNDRED_AND_TWELFTH = new MXML_NoteDurationType("512th", 0);
	public static final MXML_NoteDurationType DOTTED_ONE_THOUSAND_AND_TWENTY_FOURTH = new MXML_NoteDurationType("1024th", 1);
	public static final MXML_NoteDurationType ONE_THOUSAND_AND_TWENTY_FOURTH = new MXML_NoteDurationType("1024th", 0);
	
	public static final Map<Double, MXML_NoteDurationType> xmlDurationNoteType = ImmutableMap.<Double, MXML_NoteDurationType>builder()
		.put(48.0, DOTTED_MAXIMA)
		.put(32.0, MAXIMA)
		.put(24.0, DOTTED_LONG)
		.put(16.0, LONG)
		.put(12.0, DOTTED_BREVE)
		.put(8.0, BREVE)
		.put(6.0, DOTTED_WHOLE)
		.put(4.0, WHOLE)
		.put(3.0, DOTTED_HALF)
		.put(2.0, HALF)
		.put(1.5, DOTTED_QUARTER)
		.put(1.0, QUARTER)
		.put(0.75, DOTTED_EIGHTH)
		.put(0.5, EIGHTH)
		.put(0.375, DOTTED_SIXTEENTH)
		.put(0.25, SIXTEENTH)
		.put(0.1875, DOTTED_THIRTY_SECOND)
		.put(0.125, THIRTY_SECOND)
		.put(0.09375, DOTTED_SIXTY_FOURTH)
		.put(0.0625, SIXTY_FOURTH)
		.put(0.046875, DOTTED_ONE_TWENTY_EIGHTH)
		.put(0.03125, ONE_TWENTY_EIGHTH)
		.put(0.0234375, DOTTED_TWO_HUNDRED_AND_FIFTY_SIXTH)
		.put(0.015625, TWO_HUNDRED_AND_FIFTY_SIXTH)
		.put(0.01171875, DOTTED_FIVE_HUNDRED_AND_TWELFTH)
		.put(0.0078125, FIVE_HUNDRED_AND_TWELFTH)
		.put(0.005859375, DOTTED_ONE_THOUSAND_AND_TWENTY_FOURTH)
		.put(0.00390625, ONE_THOUSAND_AND_TWENTY_FOURTH)
		.build();

	
	public static final Map<Double, MXML_NoteDurationType> xmlDurationRestType = ImmutableMap.<Double, MXML_NoteDurationType>builder()
		.put(32.0, MAXIMA)
		.put(16.0, LONG)
		.put(8.0, BREVE)
		.put(4.0, WHOLE)
		.put(2.0, HALF)
		.put(1.0, QUARTER)
		.put(0.5, EIGHTH)
		.put(0.25, SIXTEENTH)
		.put(0.125, THIRTY_SECOND)
		.put(0.0625, SIXTY_FOURTH)
		.put(0.03125, ONE_TWENTY_EIGHTH)
		.put(0.015625, TWO_HUNDRED_AND_FIFTY_SIXTH)
		.put(0.0078125, FIVE_HUNDRED_AND_TWELFTH)
		.put(0.00390625, ONE_THOUSAND_AND_TWENTY_FOURTH)
		.build();



	public static final Map<Integer, XMLKey> xmlKeyMap = ImmutableMap.<Integer, XMLKey>builder()
		.put(0, new XMLKey("C", 0, 
				new IntAndString[]{
						new IntAndString(0, "C"),
						new IntAndString(1, "C"),
						new IntAndString(0, "D"),
						new IntAndString(-1, "E"),
						new IntAndString(0, "E"),
						new IntAndString(0, "F"),
						new IntAndString(1, "F"),
						new IntAndString(0, "G"),
						new IntAndString(1, "G"),
						new IntAndString(0, "A"),
						new IntAndString(-1, "B"),
						new IntAndString(0, "B"),					
						}
				))
		.put(-5, new XMLKey("Db", -5, 
				new IntAndString[]{
						new IntAndString(0, "C"),
						new IntAndString(-1, "D"),
						new IntAndString(0, "D"),
						new IntAndString(-1, "E"),
						new IntAndString(0, "E"),
						new IntAndString(0, "F"),
						new IntAndString(-1, "G"),
						new IntAndString(0, "G"),
						new IntAndString(-1, "A"),
						new IntAndString(0, "A"),
						new IntAndString(-1, "B"),
						new IntAndString(0, "B"),					
						}
				))
		.put(2, new XMLKey("D", 2, 
				new IntAndString[]{
						new IntAndString(0, "C"),
						new IntAndString(1, "C"),
						new IntAndString(0, "D"),
						new IntAndString(1, "D"),
						new IntAndString(0, "E"),
						new IntAndString(0, "F"),
						new IntAndString(1, "F"),
						new IntAndString(0, "G"),
						new IntAndString(1, "G"),
						new IntAndString(0, "A"),
						new IntAndString(-1, "B"),
						new IntAndString(0, "B"),					
						}
				))
		.put(-3, new XMLKey("Eb", -3, 
				new IntAndString[]{
						new IntAndString(0, "C"),
						new IntAndString(-1, "D"),
						new IntAndString(0, "D"),
						new IntAndString(-1, "E"),
						new IntAndString(0, "E"),
						new IntAndString(0, "F"),
						new IntAndString(-1, "G"),
						new IntAndString(0, "G"),
						new IntAndString(-1, "A"),
						new IntAndString(0, "A"),
						new IntAndString(-1, "B"),
						new IntAndString(0, "B"),					
						}
				))
		.put(4, new XMLKey("E", 4, 
				new IntAndString[]{
						new IntAndString(0, "C"),
						new IntAndString(1, "C"),
						new IntAndString(0, "D"),
						new IntAndString(1, "D"),
						new IntAndString(0, "E"),
						new IntAndString(1, "E"),
						new IntAndString(1, "F"),
						new IntAndString(0, "G"),
						new IntAndString(1, "G"),
						new IntAndString(0, "A"),
						new IntAndString(1, "A"),
						new IntAndString(0, "B"),					
						}
				))
		.put(-1, new XMLKey("F", -1, 
				new IntAndString[]{
						new IntAndString(0, "C"),
						new IntAndString(1, "C"),
						new IntAndString(0, "D"),
						new IntAndString(-1, "E"),
						new IntAndString(0, "E"),
						new IntAndString(0, "F"),
						new IntAndString(1, "F"),
						new IntAndString(0, "G"),
						new IntAndString(1, "G"),
						new IntAndString(0, "A"),
						new IntAndString(-1, "B"),
						new IntAndString(0, "B"),					
						}
				))
		.put(6, new XMLKey("F#", 6, 
				new IntAndString[]{
						new IntAndString(0, "C"),
						new IntAndString(1, "C"),
						new IntAndString(0, "D"),
						new IntAndString(1, "D"),
						new IntAndString(0, "E"),
						new IntAndString(1, "E"),
						new IntAndString(1, "F"),
						new IntAndString(0, "G"),
						new IntAndString(1, "G"),
						new IntAndString(0, "A"),
						new IntAndString(1, "A"),
						new IntAndString(0, "B"),					
						}
				))
		.put(-6, new XMLKey("Gb", -6, 
				new IntAndString[]{
						new IntAndString(0, "C"),
						new IntAndString(-1, "D"),
						new IntAndString(0, "D"),
						new IntAndString(-1, "E"),
						new IntAndString(0, "E"),
						new IntAndString(0, "F"),
						new IntAndString(-1, "G"),
						new IntAndString(0, "G"),
						new IntAndString(-1, "A"),
						new IntAndString(0, "A"),
						new IntAndString(-1, "B"),
						new IntAndString(-1, "C"),					
						}
				))
		.put(1, new XMLKey("G", 1, 
				new IntAndString[]{
						new IntAndString(0, "C"),
						new IntAndString(1, "C"),
						new IntAndString(0, "D"),
						new IntAndString(1, "D"),
						new IntAndString(0, "E"),
						new IntAndString(0, "F"),
						new IntAndString(1, "F"),
						new IntAndString(0, "G"),
						new IntAndString(1, "G"),
						new IntAndString(0, "A"),
						new IntAndString(-1, "B"),
						new IntAndString(0, "B"),					
						}
				))
		.put(-4, new XMLKey("Ab", -4, 
				new IntAndString[]{
						new IntAndString(0, "C"),
						new IntAndString(-1, "D"),
						new IntAndString(0, "D"),
						new IntAndString(-1, "E"),
						new IntAndString(0, "E"),
						new IntAndString(0, "F"),
						new IntAndString(-1, "G"),
						new IntAndString(0, "G"),
						new IntAndString(-1, "A"),
						new IntAndString(0, "A"),
						new IntAndString(-1, "B"),
						new IntAndString(1, "C"),					
						}
				))
		.put(3, new XMLKey("A", 3, 
				new IntAndString[]{
						new IntAndString(0, "C"),
						new IntAndString(1, "C"),
						new IntAndString(0, "D"),
						new IntAndString(1, "D"),
						new IntAndString(0, "E"),
						new IntAndString(1, "E"),
						new IntAndString(1, "F"),
						new IntAndString(0, "G"),
						new IntAndString(1, "G"),
						new IntAndString(0, "A"),
						new IntAndString(1, "A"),
						new IntAndString(0, "B"),					
						}
				))
		.put(-2, new XMLKey("Bb", -2, 
				new IntAndString[]{
						new IntAndString(0, "C"),
						new IntAndString(-1, "D"),
						new IntAndString(0, "D"),
						new IntAndString(-1, "E"),
						new IntAndString(0, "E"),
						new IntAndString(0, "F"),
						new IntAndString(1, "F"),
						new IntAndString(0, "G"),
						new IntAndString(-1, "A"),
						new IntAndString(0, "A"),
						new IntAndString(-1, "B"),
						new IntAndString(0, "B"),					
						}
				))
		.put(5, new XMLKey("B", 5, 
				new IntAndString[]{
						new IntAndString(1, "B"),
						new IntAndString(1, "C"),
						new IntAndString(0, "D"),
						new IntAndString(1, "D"),
						new IntAndString(0, "E"),
						new IntAndString(1, "E"),
						new IntAndString(1, "F"),
						new IntAndString(2, "F"),
						new IntAndString(1, "G"),
						new IntAndString(0, "A"),
						new IntAndString(1, "A"),
						new IntAndString(0, "B"),					
						}
				))
//		.put(-7, new XMLKey("Cb", 5, 		// these were added on 2021_03_07 but I think I failed to understand the idea behind this and it did not work well. Should probably leave out C# and Cb completely 
//				new IntAndString[]{
//						new IntAndString(0, "C"),
//						new IntAndString(0, "C"),
//						new IntAndString(0, "D"),
//						new IntAndString(-2, "E"),
//						new IntAndString(0, "E"),
//						new IntAndString(0, "F"),
//						new IntAndString(0, "F"),
//						new IntAndString(0, "G"),
//						new IntAndString(0, "G"),
//						new IntAndString(0, "A"),
//						new IntAndString(-2, "B"),
//						new IntAndString(0, "B"),					
//						}
//				))
//		.put(7, new XMLKey("C#", 0, 
//				new IntAndString[]{
//						new IntAndString(0, "C"),
//						new IntAndString(2, "C"),
//						new IntAndString(0, "D"),
//						new IntAndString(2, "D"),
//						new IntAndString(0, "E"),
//						new IntAndString(0, "F"),
//						new IntAndString(2, "F"),
//						new IntAndString(0, "G"),
//						new IntAndString(2, "G"),
//						new IntAndString(0, "A"),
//						new IntAndString(0, "B"),
//						new IntAndString(0, "B"),					
//						}
//				))
	.build();

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public MXML()
  {}

  //------------------------
  // INTERFACE
  //------------------------

  public void delete()
  {}


  public String toString()
  {
    return super.toString() + "["+ "]";
  }
}